//----------------------------------------------------
// general configuration that applies to all modules
//----------------------------------------------------
description = 'Mosaic Web Platform'
allprojects {
    group = 'org.mosaic'
    version = '0.1.0.DEV'
    ext {
        vendor = 'Arik Kfir'

        // dependency management
        dependencies {

            // logging
            logging = [
                    'org.slf4j:slf4j-api:1.6.4',
                    'org.slf4j:jcl-over-slf4j:1.6.4',
            ]

            // logging
            logback = [
                    'ch.qos.logback:logback-classic:1.0.1',
                    'ch.qos.logback:logback-core:1.0.1',
            ]

            // joda date/time
            joda = [ 'joda-time:joda-time:2.1' ]

            // OSGi
            osgi = [
                    'org.osgi:org.osgi.core:4.2.0',
                    'org.osgi:org.osgi.compendium:4.2.0',
                    'org.apache.felix:org.apache.felix.framework:4.0.2',
                    'org.apache.felix:org.apache.felix.gogo.runtime:0.10.0',
                    'org.apache.felix:org.apache.felix.gogo.shell:0.10.0',
                    'org.apache.felix:org.apache.felix.bundlerepository:1.6.6',
                    'org.apache.felix:org.apache.felix.log:1.0.1',
            ]

            // jetty
            jetty = [
                    'org.eclipse.jetty.orbit:javax.servlet:3.0.0.v201112011016@jar',
                    'org.eclipse.jetty:jetty-util:8.1.2.v20120308',
                    'org.eclipse.jetty:jetty-io:8.1.2.v20120308',
                    'org.eclipse.jetty:jetty-http:8.1.2.v20120308',
                    'org.eclipse.jetty:jetty-server:8.1.2.v20120308',
                    'org.eclipse.jetty:jetty-continuation:8.1.2.v20120308',
                    'org.eclipse.jetty:jetty-ajp:8.1.2.v20120308',
            ]

            // scheduling
            quartz = [ 'org.quartz-scheduler:quartz:2.1.3' ]

            // spring
            spring = [
                    'org.springframework:spring-beans:3.1.1.RELEASE',
                    'org.springframework:spring-context:3.1.1.RELEASE',
                    'org.springframework:spring-context-support:3.1.1.RELEASE',
                    'org.springframework:spring-core:3.1.1.RELEASE',
                    'org.springframework:spring-expression:3.1.1.RELEASE',
                    'org.springframework:spring-web:3.1.1.RELEASE',
                    'org.springframework:spring-webmvc:3.1.1.RELEASE',
            ]

            // thymeleaf
            templating = [
                    'ognl:ognl:3.0.4',
                    'org.javassist:javassist:3.15.0-GA',
                    'org.thymeleaf:thymeleaf:2.0.4',
                    'org.thymeleaf:thymeleaf-spring3:2.0.4',
            ]

            // jackson
            jackson = [
                    'org.codehaus.jackson:jackson-core-asl:1.9.5',
                    'org.codehaus.jackson:jackson-mapper-asl:1.9.5',
            ]
        }
    }
}

//-----------------------------------------------
// configure child projects
//-----------------------------------------------
subprojects {

    //-----------------------------------------------
    // setup compilation
    //-----------------------------------------------

    // required plugins
    apply plugin: 'java'
    apply plugin: 'osgi'

    // compiler configuration
    compileJava {
        options.compilerArgs = [ '-Xlint:unchecked' ]
        options.debug( debugLevel: 'lines,vars,source' )
        options.deprecation = true
        options.encoding = 'UTF-8'
        options.warnings = true
    }

    //-----------------------------------------------
    // set-up dependency resolution
    //-----------------------------------------------

    // we will use the standard maven repository
    apply plugin: 'maven'
    repositories {
        mavenCentral()
    }

    // disable dependency transitivity - maven repos have lots of junk
    configurations*.transitive = false

    //-----------------------------------------------
    // set-up packaging
    //-----------------------------------------------

    // configure packaging
    afterEvaluate { project ->
        jar {
            manifest {
//                setName project.label
//                setDescription project.description
//                setVendor project.ext.vendor
//                setVersion project.version + '.' + project.classifier
//                instruction 'Export-Package', "!*impl*,*;version=\"${ project.version }.${ project.classifier }\""
//                instruction '_plugin', 'aQute.lib.spring.SpringComponent'
//                if( project.hasProperty( 'activator' ) ) {
//                    instruction 'Bundle-Activator', project.activator
//                } else {
//                    if( file( "$projectDir/src/main/resources/META-INF/rinku" ).isDirectory() ) {
//                        instruction 'Bundle-Activator', 'com.infolinks.rinku.osgi.RinkuActivator'
//                    }
//                }
//                def imports = ''
//                if( project.transactional ) {
//                    osgiTxImports.each {
//                        if( imports.length() > 0 ) imports += ','
//                        imports += it
//                    }
//                }
//                osgiImports.each {
//                    if( imports.length() > 0 ) imports += ','
//                    imports += it
//                }
//                if( imports.length() > 0 ) {
//                    instruction 'Import-Package', imports + ',*'
//                }
            }
        }
    }

}
